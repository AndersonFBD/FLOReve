-- MySQL Script generated by MySQL Workbench
-- Sun May 15 09:38:10 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cliente` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `telefone` VARCHAR(45) NOT NULL,
  `endereco` VARCHAR(70) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`planta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`planta` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome_popular` VARCHAR(45) NOT NULL,
  `nome_cientifico` VARCHAR(45) NOT NULL,
  `preco` DECIMAL NOT NULL,
  `tamanho_vaso` DECIMAL NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`insumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`insumo` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `preco` DECIMAL NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`produto` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `marca` VARCHAR(45) NULL,
  `preco` DECIMAL NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`fornecedor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `telefone` VARCHAR(45) NOT NULL,
  `endereco` VARCHAR(70) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`fornecimento_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`fornecimento_produto` (
  `fornecedor_id` INT NOT NULL,
  `produto_id` INT NOT NULL,
  `data` DATE NOT NULL,
  PRIMARY KEY (`fornecedor_id`, `produto_id`),
  INDEX `fk_fornecedor_has_produto_produto1_idx` (`produto_id` ASC) VISIBLE,
  INDEX `fk_fornecedor_has_produto_fornecedor_idx` (`fornecedor_id` ASC) VISIBLE,
  CONSTRAINT `fk_fornecedor_has_produto_fornecedor`
    FOREIGN KEY (`fornecedor_id`)
    REFERENCES `mydb`.`fornecedor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fornecedor_has_produto_produto1`
    FOREIGN KEY (`produto_id`)
    REFERENCES `mydb`.`produto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`fornecimento_planta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`fornecimento_planta` (
  `fornecedor_id` INT NOT NULL,
  `planta_id` INT NOT NULL,
  `data` DATE NOT NULL,
  PRIMARY KEY (`fornecedor_id`, `planta_id`),
  INDEX `fk_fornecedor_has_planta_planta1_idx` (`planta_id` ASC) VISIBLE,
  INDEX `fk_fornecedor_has_planta_fornecedor1_idx` (`fornecedor_id` ASC) VISIBLE,
  CONSTRAINT `fk_fornecedor_has_planta_fornecedor1`
    FOREIGN KEY (`fornecedor_id`)
    REFERENCES `mydb`.`fornecedor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fornecedor_has_planta_planta1`
    FOREIGN KEY (`planta_id`)
    REFERENCES `mydb`.`planta` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`fornecimento_insumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`fornecimento_insumo` (
  `fornecedor_id` INT NOT NULL,
  `insumo_id` INT NOT NULL,
  `data` DATE NOT NULL,
  PRIMARY KEY (`fornecedor_id`, `insumo_id`),
  INDEX `fk_fornecedor_has_insumo_insumo1_idx` (`insumo_id` ASC) VISIBLE,
  INDEX `fk_fornecedor_has_insumo_fornecedor1_idx` (`fornecedor_id` ASC) VISIBLE,
  CONSTRAINT `fk_fornecedor_has_insumo_fornecedor1`
    FOREIGN KEY (`fornecedor_id`)
    REFERENCES `mydb`.`fornecedor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fornecedor_has_insumo_insumo1`
    FOREIGN KEY (`insumo_id`)
    REFERENCES `mydb`.`insumo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`encomenda_planta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`encomenda_planta` (
  `cliente_id` INT NOT NULL,
  `planta_id` INT NOT NULL,
  `data` DATE NOT NULL,
  PRIMARY KEY (`cliente_id`, `planta_id`),
  INDEX `fk_cliente_has_planta_planta1_idx` (`planta_id` ASC) VISIBLE,
  INDEX `fk_cliente_has_planta_cliente1_idx` (`cliente_id` ASC) VISIBLE,
  CONSTRAINT `fk_cliente_has_planta_cliente1`
    FOREIGN KEY (`cliente_id`)
    REFERENCES `mydb`.`cliente` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cliente_has_planta_planta1`
    FOREIGN KEY (`planta_id`)
    REFERENCES `mydb`.`planta` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
