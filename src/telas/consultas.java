package telas;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import floreve.BD;

/**
 *
 * @author ander
 */
public class consultas extends javax.swing.JFrame {
        private final String sqlcliente = "cliente";
        private final String sqlproduto = "produto";
        private final String sqlplanta = "planta";
        private final String sqlfornecedor = "fornecedor";
        private final String sqlencplanta = "encomenda_planta";
        private final String sqlfornplanta = "fornecimento_planta";
        private final String sqlfornprod = "fornecimento_produto";
        private BD bd;
        private PreparedStatement state;
        private ResultSet result;
    
    
    /**
     * Creates new form consultas
     */
    public consultas() {
        initComponents();
        bd = new BD();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bt_sair = new javax.swing.JButton();
        scrolltable = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tf_id = new javax.swing.JTextField();
        cb_cat = new javax.swing.JComboBox<>();
        bt_buscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bt_sair.setText("SAIR");
        bt_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_sairActionPerformed(evt);
            }
        });

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrolltable.setViewportView(tabela);

        jLabel1.setText("ID:");

        cb_cat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "cliente", "encomendas", "fornecedor", "fornec. plantas", "fornec. produtos", "planta", "produto" }));

        bt_buscar.setText("Buscar");
        bt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_buscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bt_sair)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cb_cat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_id, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(bt_buscar))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(scrolltable, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tf_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_cat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_buscar))
                .addGap(18, 18, 18)
                .addComponent(scrolltable, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(bt_sair)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_sairActionPerformed
        dispose();
    }//GEN-LAST:event_bt_sairActionPerformed

    private void bt_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_buscarActionPerformed
        try{
            if(!bd.GetConnection()){
                JOptionPane.showMessageDialog(null, "Falha na conex√£o, encerrando!");
                System.exit(0);
            }
            String buscasql, filtro ="";
            String tabelasql = "";
            int opcao = cb_cat.getSelectedIndex();
            
            switch (opcao) {
                case 0: tabelasql = sqlcliente;
                break;
                case 1: tabelasql = sqlencplanta;
                break;
                case 2: tabelasql = sqlfornecedor;
                break;
                case 3: tabelasql = sqlfornplanta;
                break;
                case 4: tabelasql = sqlfornprod;
                break;
                case 5: tabelasql = sqlplanta;
                break;
                case 6: tabelasql = sqlproduto;
                break;
            }
                   
            
            if(tf_id.getText().trim().equals("") || tf_id.getText().trim().equals("*")){
           switch (opcao) {
                case 0: filtro = "SELECT * FROM "+tabelasql +";";
                break;
                case 1: filtro = "SELECT e.id, c.nome , p.nome_popular , e.data\n" +
                                    "from "+tabelasql+" as e\n" +
                                    "INNER JOIN cliente as c on e.cliente_id = c.id\n" +
                                    "INNER JOIN planta as p on e.planta_id = p.id;\n";
                break;
                case 2: filtro = "SELECT * FROM "+tabelasql +";";
                break;
                case 3: filtro = "SELECT fp.id, fo.nome , pl.nome_popular , fp.data\n" +
                                  "from "+tabelasql+" as fp\n" +
                                  "INNER JOIN fornecedor as fo on fp.fornecedor_id = fo.id\n" +
                                  "INNER JOIN planta as pl on fp.planta_id = pl.id;\n";
                break;
                case 4: filtro = "SELECT fp.id, fo.nome , pr.nome, pr.tipo , fp.data\n" +
                                  "from "+tabelasql+" as fp\n" +
                                  "INNER JOIN fornecedor as fo on fp.fornecedor_id = fo.id\n" +
                                  "INNER JOIN produto as pr on fp.produto_id = pr.id;\n";
                break;
                case 5: filtro = "SELECT * FROM "+tabelasql +";";
                break;
                case 6: filtro = "SELECT * FROM "+tabelasql +";";
                break;
            }
                
                //buscasql = "SELECT * FROM "+tabelasql +";";
                buscasql = filtro;
            }
            else{
                switch (opcao) {
                case 0: filtro = "SELECT * FROM "+tabelasql +" WHERE id = " +tf_id.getText() +";";;
                break;
                case 1: filtro = "SELECT e.id, c.nome , p.nome_popular , e.data\n" +
                                    "from " +tabelasql +" as e\n" +
                                    "INNER JOIN cliente as c on e.cliente_id = c.id\n" +
                                    "INNER JOIN planta as p on e.planta_id = p.id"
                                    + " where e.id = " +tf_id.getText()+";";
                break;
                case 2: filtro = "SELECT * FROM "+tabelasql +" WHERE id = " +tf_id.getText() +";";;
                break;
                case 3: filtro = "SELECT fp.id, fo.nome , pl.nome_popular , fp.data\n" +
                                  "from "+tabelasql+" as fp\n" +
                                  "INNER JOIN fornecedor as fo on fp.fornecedor_id = fo.id\n" +
                                  "INNER JOIN planta as pl on fp.planta_id = pl.id"
                                  + " where fp.id = " +tf_id.getText()+";";
                break;
                case 4: filtro = "SELECT fp.id, fo.nome , pr.nome, pr.tipo , fp.data\n" +
                                  "from "+tabelasql +" as fp\n" +
                                  "INNER JOIN fornecedor as fo on fp.fornecedor_id = fo.id\n" +
                                  "INNER JOIN produto as pr on fp.produto_id = pr.id"
                                  + " WHERE fp.id = " +tf_id.getText()+";";
                break;
                case 5: filtro = "SELECT * FROM "+tabelasql +" WHERE id = " +tf_id.getText() +";";;
                break;
                case 6: filtro = "SELECT * FROM "+tabelasql +" WHERE id = " +tf_id.getText() +";";;
                break;
            }
                    buscasql = filtro;
                    //buscasql = "SELECT * FROM "+tabelasql +" WHERE id = " +tf_id.getText() +";";
            }
            
            state = bd.conn.prepareStatement(buscasql);
            result = state.executeQuery();
            DefaultTableModel modelo = new DefaultTableModel(new String[]{},0){};
            
            //montagem da tabela
            int colunas = result.getMetaData().getColumnCount();
            for (int indice = 1; indice <=colunas; indice++)
                modelo.addColumn(result.getMetaData().getColumnName(indice));
            
            tabela = new JTable(modelo);
            DefaultTableModel dtm = (DefaultTableModel) tabela.getModel();
            
            while(result.next()){
                try {
                    String[] dados = new String[colunas];
                      
                        for(int i = 1; i <= colunas; i++){
                            dados[i-1] = result.getString(i);
                        }
                        dtm.addRow(dados);
                        System.out.println();
                      }
                      catch(SQLException erro){
                      }
                      scrolltable.setViewportView(tabela);
                                        }
                  result.close();
                  state.close();
                  bd.close();
                }         
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, "erro na busca");
        }
    }//GEN-LAST:event_bt_buscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new consultas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_buscar;
    private javax.swing.JButton bt_sair;
    private javax.swing.JComboBox<String> cb_cat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane scrolltable;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField tf_id;
    // End of variables declaration//GEN-END:variables
}
